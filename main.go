package main

import (
	"context"
	"fmt"
	"log"

	// Importing the general purpose Cosmos blockchain client
	"github.com/ignite/cli/ignite/pkg/cosmosclient"

	// Importing the types package of your blog blockchain
	"succinct/x/verifier/types"
)

func main() {
	// Prefix to use for account addresses.
	// The address prefix was assigned to the blog blockchain
	// using the `--address-prefix` flag during scaffolding.
	addressPrefix := "succinct"
	// Create a Cosmos client instance
	cosmos, err := cosmosclient.New(
		context.Background(),
		cosmosclient.WithAddressPrefix(addressPrefix),
	)
	if err != nil {
		log.Fatal(err)
	}

	queryClient := types.NewQueryClient(cosmos.Context())
	queryResp, err := queryClient.Verify(context.Background(), &types.QueryVerifyRequest{
		Proof:           "{\"pi_a\":[\"20944798263931919483445935528518074691583389144841365006036843799631993617584\",\"11485556887970060004566553063334854624996485637448430360046879615525080922535\",\"1\"],\"pi_b\":[[\"15450762084099044928668236546238214861639643143452904011966761146505102487241\",\"2961038990997973004709204456505718293428027332714773452629020393806760008003\"],[\"20424965868224396207294710989192869394820397740668145200937123065316536915578\",\"530534969263895523179356678727410468959445339224088360098226662128198940278\"],[\"1\",\"0\"]],\"pi_c\":[\"7469855764709549340531077530685042944608587607284353724444860508727530041281\",\"14907652011248497807403680027899691262824734691654181570511481201181761853301\",\"1\"],\"protocol\":\"groth\"}",
		Public:          "[\"709126012174280613722721317711320012950156327894583330040764965276164956211\",\"1\"]",
		VerificationKey: "{\"protocol\":\"groth\",\"nPublic\":2,\"IC\":[[\"6947709931817076288041133838790320165660599210291541335305237093525793694757\",\"19909847897440949914291177301073776786380052060189551415822058655700988286700\",\"1\"],[\"3905330513453387924512080957808799764281233676264041358957944354508805738210\",\"21515875788648914497987145949711600465479192064025338577344388327905825401409\",\"1\"],[\"11917794045212578063103793641428531722665593142951490088859156060497339979045\",\"12474766321604813192006972818511798641943855634233126181014947752640926682002\",\"1\"]],\"vk_alfa_1\":[\"4944164948140462516695225403330258536901837835753269855152152510066450545025\",\"13475901355183470389269681924106283409122258599357634874365333744049376763952\",\"1\"],\"vk_beta_2\":[[\"8907290046852593275275969419467531322945904497876466390735189705327491149942\",\"16905961885995347884401123976773041721170392757020363085996037000555649221932\"],[\"5916208947690122430992569400081785034456927386613002136124928594898830103183\",\"8904633566599091698300463089987440016107252590957954561954105793651276835945\"],[\"1\",\"0\"]],\"vk_gamma_2\":[[\"19630991767777710330358453944686579207790570012512945239862758343923274678788\",\"10074192074090819302813960271466401441331049607107206951562887017350842848137\"],[\"3116509644773402297530795102620124013404257275653320316876858485952677399838\",\"21333917200926725405275051598776691388063686291855006404513411579947771638256\"],[\"1\",\"0\"]],\"vk_delta_2\":[[\"2435644356002961043686783790402545223529330336659302351520736387300202788185\",\"19110225718558304562516399998490232792161512464615416787940301161236570623803\"],[\"10760159107254956442187627274113649576465450269219736702756080014414718651811\",\"16026429521158606341093455181972258697723044792286397197427092142409883376499\"],[\"1\",\"0\"]],\"vk_alfabeta_12\":[[[\"6234826263273445519100805816216721010440901410041401973689944061817249627464\",\"3000576453234026376629146934524388206058533262633820291712878494313139564104\"],[\"21440531488440230607321952308088471669592673888406117380617522424745072378274\",\"12520976203249091189466522438682722023237177580859607723435908910366261869877\"],[\"3019202447906367978736298924053845046043310832712688235261925874384036648799\",\"5973645096476673480874611718320478895799568763222690249234812724227210427669\"]],[[\"3583182531969509467364524260713320024679636279211018355276189995187808127334\",\"6250952490312943541228634931176953390868745431619255906201946005215434936697\"],[\"1968941013877380195193233662764708025052818077706758584904409551542842882280\",\"3692269842561359760424374496596568205223133702540857229637412360221284861636\"],[\"2390644982053319956183235198918091612222634820641552149014649904039118341208\",\"4663770867289244147304729817258332879060637702213020469161576456716150300069\"]]]}",
	})

	if err != nil {
		log.Fatal(err)
	}

	// Print response from querying all the posts
	fmt.Print("\n\nVerify Response:\n\n")
	fmt.Println(queryResp)
}
